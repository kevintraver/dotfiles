set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-logging'


run '~/.tmux/plugins/tpm/tpm'
# *****************************************************************************
# Basic Settings
# *****************************************************************************

set -g mouse off

set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Fix clipboard
set -g set-clipboard on
set-option -g default-command "reattach-to-user-namespace -l zsh"

# renumber windows
set -g renumber-windows on

# dont wrap when switching panes
# https://github.com/tmux/tmux/pull/501
set -g wrap-select-pane off

# Allows for faster key repetition
set -s escape-time 0

# start windows with 1
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1

set-option -g detach-on-destroy off

# *****************************************************************************
# Key Mappings
# *****************************************************************************

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Prefix key
set-option -g prefix C-b
bind-key a send-prefix # for nested tmux sessions

# Easy window switching
bind-key -n C-Space last-window

# C-tab cycles next window
bind-key -n M-Tab next-window

# New Window / Split
bind-key C-c new-window -c "#{pane_current_path}"

bind-key C-\ split-window -h -c "#{pane_current_path}"
bind-key \ split-window -h -c "#{pane_current_path}"
bind-key t new-window -c "#{pane_current_path}"
bind-key h split-window -h -c "#{pane_current_path}"
bind-key v split-window -v -c "#{pane_current_path}"

bind-key -n M-t if-shell "$is_vim" "send-keys M-t" new-window -c "#{pane_current_path}"
bind-key -n M-d if-shell "$is_vim" "send-keys M-d" "split-window -h -c '#{pane_current_path}'"

bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9

# bind-key -n M-1 if-shell "$is_vim" "send-keys M-1" "select-window -t :1"
# bind-key -n M-2 if-shell "$is_vim" "send-keys M-2" "select-window -t :2"
# bind-key -n M-3 if-shell "$is_vim" "send-keys M-3" "select-window -t :3"
# bind-key -n M-4 if-shell "$is_vim" "send-keys M-4" "select-window -t :4"
# bind-key -n M-5 if-shell "$is_vim" "send-keys M-5" "select-window -t :5"
# bind-key -n M-6 if-shell "$is_vim" "send-keys M-6" "select-window -t :6"
# bind-key -n M-7 if-shell "$is_vim" "send-keys M-7" "select-window -t :7"
# bind-key -n M-8 if-shell "$is_vim" "send-keys M-8" "select-window -t :8"
# bind-key -n M-9 if-shell "$is_vim" "send-keys M-9" "select-window -t :9"

# resize windows
set-option -g @pane_resize "60"

# paste
bind-key -n M-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# vi mode
set-window-option -g mode-keys vi

bind-key -n C-] if-shell "$is_vim" "send-keys C-\]" "copy-mode"
bind-key -T copy-mode-vi C-] send -X cancel
bind-key -T copy-mode-vi i send -X cancel

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Escape send -X clear-selection

unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send -X begin-selection

unbind-key -T copy-mode-vi y
bind-key -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy" \; send -X clear-selection

# *****************************************************************************
# Extra settings
# *****************************************************************************

# Theme (generate from vim-tmuxline)
source-file ~/.tmux/tmuxline.conf

